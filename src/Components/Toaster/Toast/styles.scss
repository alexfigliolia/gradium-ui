@use "Styles/Variables";

.toast {
  --height: 0px;
  height: 0px;
  width: 100%;
  overflow: hidden;
  opacity: 0;
  position: relative;
  visibility: hidden;
  margin-bottom: 0;
  border-radius: 0.25em;
  background: var(--tile-background);
  translate: 70px 0;
  box-shadow: var(--shadow-level-2-mid);
  transition: height 0.4s 0.35s, margin-bottom 0.4s 0.35s, opacity 0.4s, translate 0.4s, visibility 0s 0.75s;
  &.visible {
    height: var(--height);
    opacity: 1;
    visibility: visible;
    pointer-events: all;
    margin-bottom: 1em;
    translate: 0 0;
    transition: height 0.3s, margin-bottom 0.3s, opacity 0.4s 0.25s, translate 0.4s 0.25s, visibility 0s;
  }
  &.error {
    @include Variables.toastFade(rgb(from Variables.$error-dark r g b / 20%));
    &>.closer-button > div > svg path {
      stroke: url(#errorGradient);
    }
    &>div {
      &>div > h4 {
        @include Variables.errorGradient(bottom);
        @include Variables.clipText;
      }
      &>svg {
        fill: url(#errorGradient);
      }
    }
    &>.closer-button > div::after {
      border: 2px solid Variables.$error-dark;
      box-shadow: #{Variables.$shadow-overhead-level-2} rgb(from Variables.$error-dark r g b / 50%);
    }
  }
  &.info {
    @include Variables.toastFade(rgb(from Variables.$info-dark r g b / 20%));
    &>.closer-button > div > svg path {
      stroke: url(#infoGradient);
    }
    &>div {
      &>div > h4 {
        @include Variables.infoGradient(bottom);
        @include Variables.clipText;
      }
      &>svg {
        fill: url(#infoGradient);
      }
    }
    &>.closer-button > div::after {
      border: 2px solid Variables.$info-dark;
      box-shadow: #{Variables.$shadow-overhead-level-2} rgb(from Variables.$info-dark r g b / 50%);
    }
  }
  &.success {
    @include Variables.toastFade(rgb(from Variables.$success-dark r g b / 20%));
    &>.closer-button > div > svg path {
      stroke: url(#successGradient);
    }
    &>div {
      &> div > h4 {
        @include Variables.successGradient(bottom);
        @include Variables.clipText;
      }
      &>svg {
        width: 1.75em;
        min-width: 1.75em;
        height: 1.75em;
        margin-top: -0.15em;
        stroke: url(#successGradient);
      }
    }
    &>.closer-button > div::after {
      border: 2px solid Variables.$success-dark;
      box-shadow: #{Variables.$shadow-overhead-level-2} rgb(from Variables.$success-dark r g b / 50%);
    }
  }
  &>.closer-button {
    top: 0.5em;
    right: 0.5em;
    position: absolute;
    --dimensions: 1.75em;
    &>div > svg {
      filter: drop-shadow(0em 0.1em 0.15em rgba(#000, 0.15));
    }
  }
  &>div {
    width: 100%;
    display: flex;
    flex-direction: row;
    column-gap: 0.5em;
    padding: 1em;
    &>svg {
      width: 1.5em;
      min-width: 1.5em;
      height: 1.5em;
    }
    &>div {
      &>h4 {
        line-height: 1;
        font-size: 1.25em;
        margin-bottom: 0.25em;
        font-weight: 500;
      }
      &>p {
        color: var(--text-color-light);
        &>strong {
          color: var(--text-color-light);
        }
      }
    }
  }
}